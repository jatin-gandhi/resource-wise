"""initial setup

Revision ID: afcad4ad30f9
Revises: 
Create Date: 2025-06-12 20:38:04.044055

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import pgvector
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'afcad4ad30f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('idx_user_active_superuser'), table_name='users')
    op.drop_index(op.f('idx_user_search_vector'), table_name='users', postgresql_using='gin')
    op.drop_index(op.f('ix_users_created_by'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_index(op.f('ix_users_deleted_by'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_is_active'), table_name='users')
    op.drop_index(op.f('ix_users_updated_by'), table_name='users')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_allocations_created_by'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_deleted_at'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_deleted_by'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_employee_id'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_end_date'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_project_id'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_start_date'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_status'), table_name='allocations')
    op.drop_index(op.f('ix_allocations_updated_by'), table_name='allocations')
    op.drop_table('allocations')
    op.drop_index(op.f('idx_employee_embedding_search_vector'), table_name='employee_embeddings', postgresql_using='gin')
    op.drop_index(op.f('ix_employee_embeddings_created_by'), table_name='employee_embeddings')
    op.drop_index(op.f('ix_employee_embeddings_deleted_at'), table_name='employee_embeddings')
    op.drop_index(op.f('ix_employee_embeddings_deleted_by'), table_name='employee_embeddings')
    op.drop_index(op.f('ix_employee_embeddings_updated_by'), table_name='employee_embeddings')
    op.drop_table('employee_embeddings')
    op.drop_index(op.f('idx_employee_skill_name'), table_name='employee_skills')
    op.drop_index(op.f('idx_employee_skill_search_vector'), table_name='employee_skills', postgresql_using='gin')
    op.drop_index(op.f('idx_skill_proficiency'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_created_by'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_deleted_at'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_deleted_by'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_employee_id'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_skill_name'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_source'), table_name='employee_skills')
    op.drop_index(op.f('ix_employee_skills_updated_by'), table_name='employee_skills')
    op.drop_table('employee_skills')
    op.drop_index(op.f('idx_employee_active_designation'), table_name='employees')
    op.drop_index(op.f('idx_employee_search_vector'), table_name='employees', postgresql_using='gin')
    op.drop_index(op.f('ix_employees_created_by'), table_name='employees')
    op.drop_index(op.f('ix_employees_deleted_at'), table_name='employees')
    op.drop_index(op.f('ix_employees_deleted_by'), table_name='employees')
    op.drop_index(op.f('ix_employees_designation_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_email'), table_name='employees')
    op.drop_index(op.f('ix_employees_is_active'), table_name='employees')
    op.drop_index(op.f('ix_employees_name'), table_name='employees')
    op.drop_index(op.f('ix_employees_updated_by'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('idx_project_required_skills'), table_name='projects', postgresql_using='gin')
    op.drop_index(op.f('idx_project_search_vector'), table_name='projects', postgresql_using='gin')
    op.drop_index(op.f('idx_project_status_duration'), table_name='projects')
    op.drop_index(op.f('idx_project_tech_stack'), table_name='projects', postgresql_using='gin')
    op.drop_index(op.f('ix_projects_created_by'), table_name='projects')
    op.drop_index(op.f('ix_projects_deleted_at'), table_name='projects')
    op.drop_index(op.f('ix_projects_deleted_by'), table_name='projects')
    op.drop_index(op.f('ix_projects_name'), table_name='projects')
    op.drop_index(op.f('ix_projects_status'), table_name='projects')
    op.drop_index(op.f('ix_projects_updated_by'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('idx_designation_active_level'), table_name='designations')
    op.drop_index(op.f('idx_designation_leadership_level'), table_name='designations')
    op.drop_index(op.f('idx_designation_search_vector'), table_name='designations', postgresql_using='gin')
    op.drop_index(op.f('ix_designations_code'), table_name='designations')
    op.drop_index(op.f('ix_designations_created_by'), table_name='designations')
    op.drop_index(op.f('ix_designations_deleted_at'), table_name='designations')
    op.drop_index(op.f('ix_designations_deleted_by'), table_name='designations')
    op.drop_index(op.f('ix_designations_is_active'), table_name='designations')
    op.drop_index(op.f('ix_designations_level'), table_name='designations')
    op.drop_index(op.f('ix_designations_updated_by'), table_name='designations')
    op.drop_table('designations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('designations',
    sa.Column('code', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('title', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('level', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('is_leadership', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='designations_created_by_fkey'),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name='designations_deleted_by_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='designations_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='designations_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_designations_updated_by'), 'designations', ['updated_by'], unique=False)
    op.create_index(op.f('ix_designations_level'), 'designations', ['level'], unique=False)
    op.create_index(op.f('ix_designations_is_active'), 'designations', ['is_active'], unique=False)
    op.create_index(op.f('ix_designations_deleted_by'), 'designations', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_designations_deleted_at'), 'designations', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_designations_created_by'), 'designations', ['created_by'], unique=False)
    op.create_index(op.f('ix_designations_code'), 'designations', ['code'], unique=True)
    op.create_index(op.f('idx_designation_search_vector'), 'designations', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_designation_leadership_level'), 'designations', ['is_leadership', 'level'], unique=False)
    op.create_index(op.f('idx_designation_active_level'), 'designations', ['is_active', 'level'], unique=False)
    op.create_table('projects',
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('duration_months', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tech_stack', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('PLANNING', 'ACTIVE', 'ON_HOLD', 'COMPLETED', 'CANCELLED', name='projectstatus'), autoincrement=False, nullable=True),
    sa.Column('required_roles', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('required_skills', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='projects_created_by_fkey'),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name='projects_deleted_by_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='projects_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='projects_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_projects_updated_by'), 'projects', ['updated_by'], unique=False)
    op.create_index(op.f('ix_projects_status'), 'projects', ['status'], unique=False)
    op.create_index(op.f('ix_projects_name'), 'projects', ['name'], unique=False)
    op.create_index(op.f('ix_projects_deleted_by'), 'projects', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_projects_deleted_at'), 'projects', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_projects_created_by'), 'projects', ['created_by'], unique=False)
    op.create_index(op.f('idx_project_tech_stack'), 'projects', ['tech_stack'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_project_status_duration'), 'projects', ['status', 'duration_months'], unique=False)
    op.create_index(op.f('idx_project_search_vector'), 'projects', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_project_required_skills'), 'projects', ['required_skills'], unique=False, postgresql_using='gin')
    op.create_table('employees',
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('designation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('capacity_percent', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('onboarded_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name='employees_created_by_fkey'),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name='employees_deleted_by_fkey'),
    sa.ForeignKeyConstraint(['designation_id'], ['designations.id'], name='employees_designation_id_fkey'),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name='employees_updated_by_fkey'),
    sa.PrimaryKeyConstraint('id', name='employees_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_employees_updated_by'), 'employees', ['updated_by'], unique=False)
    op.create_index(op.f('ix_employees_name'), 'employees', ['name'], unique=False)
    op.create_index(op.f('ix_employees_is_active'), 'employees', ['is_active'], unique=False)
    op.create_index(op.f('ix_employees_email'), 'employees', ['email'], unique=True)
    op.create_index(op.f('ix_employees_designation_id'), 'employees', ['designation_id'], unique=False)
    op.create_index(op.f('ix_employees_deleted_by'), 'employees', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_employees_deleted_at'), 'employees', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_employees_created_by'), 'employees', ['created_by'], unique=False)
    op.create_index(op.f('idx_employee_search_vector'), 'employees', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_employee_active_designation'), 'employees', ['is_active', 'designation_id'], unique=False)
    op.create_table('employee_skills',
    sa.Column('employee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('skill_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('experience_months', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_used', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('source', postgresql.ENUM('PAT', 'MANUAL', 'SEED', 'SELF_ASSESSMENT', 'MANAGER_ASSESSMENT', name='skillsource'), autoincrement=False, nullable=True),
    sa.Column('proficiency_level', postgresql.ENUM('BEGINNER', 'NOVICE', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='skillproficiencylevel'), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('employee_skills_created_by_fkey')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('employee_skills_deleted_by_fkey')),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('employee_skills_employee_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('employee_skills_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('employee_skills_pkey'))
    )
    op.create_index(op.f('ix_employee_skills_updated_by'), 'employee_skills', ['updated_by'], unique=False)
    op.create_index(op.f('ix_employee_skills_source'), 'employee_skills', ['source'], unique=False)
    op.create_index(op.f('ix_employee_skills_skill_name'), 'employee_skills', ['skill_name'], unique=False)
    op.create_index(op.f('ix_employee_skills_employee_id'), 'employee_skills', ['employee_id'], unique=False)
    op.create_index(op.f('ix_employee_skills_deleted_by'), 'employee_skills', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_employee_skills_deleted_at'), 'employee_skills', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_employee_skills_created_by'), 'employee_skills', ['created_by'], unique=False)
    op.create_index(op.f('idx_skill_proficiency'), 'employee_skills', ['skill_name', 'proficiency_level'], unique=False)
    op.create_index(op.f('idx_employee_skill_search_vector'), 'employee_skills', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_employee_skill_name'), 'employee_skills', ['employee_id', 'skill_name'], unique=False)
    op.create_table('employee_embeddings',
    sa.Column('employee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('source', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('summary', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('embedding', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('employee_embeddings_created_by_fkey')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('employee_embeddings_deleted_by_fkey')),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('employee_embeddings_employee_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('employee_embeddings_updated_by_fkey')),
    sa.PrimaryKeyConstraint('employee_id', 'source', name=op.f('employee_embeddings_pkey'))
    )
    op.create_index(op.f('ix_employee_embeddings_updated_by'), 'employee_embeddings', ['updated_by'], unique=False)
    op.create_index(op.f('ix_employee_embeddings_deleted_by'), 'employee_embeddings', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_employee_embeddings_deleted_at'), 'employee_embeddings', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_employee_embeddings_created_by'), 'employee_embeddings', ['created_by'], unique=False)
    op.create_index(op.f('idx_employee_embedding_search_vector'), 'employee_embeddings', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_table('allocations',
    sa.Column('project_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('employee_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('percent_allocated', postgresql.ENUM('QUARTER', 'HALF', 'THREE_QUARTER', 'FULL', name='allocationpercentage'), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('status', postgresql.ENUM('ACTIVE', 'COMPLETED', 'CANCELLED', name='allocationstatus'), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('allocations_created_by_fkey')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('allocations_deleted_by_fkey')),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('allocations_employee_id_fkey')),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], name=op.f('allocations_project_id_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('allocations_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('allocations_pkey')),
    sa.UniqueConstraint('project_id', 'employee_id', 'start_date', name=op.f('unique_allocation'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('ix_allocations_updated_by'), 'allocations', ['updated_by'], unique=False)
    op.create_index(op.f('ix_allocations_status'), 'allocations', ['status'], unique=False)
    op.create_index(op.f('ix_allocations_start_date'), 'allocations', ['start_date'], unique=False)
    op.create_index(op.f('ix_allocations_project_id'), 'allocations', ['project_id'], unique=False)
    op.create_index(op.f('ix_allocations_end_date'), 'allocations', ['end_date'], unique=False)
    op.create_index(op.f('ix_allocations_employee_id'), 'allocations', ['employee_id'], unique=False)
    op.create_index(op.f('ix_allocations_deleted_by'), 'allocations', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_allocations_deleted_at'), 'allocations', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_allocations_created_by'), 'allocations', ['created_by'], unique=False)
    op.create_table('users',
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('avatar_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('deleted_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('created_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('deleted_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('search_vector', postgresql.TSVECTOR(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('users_created_by_fkey')),
    sa.ForeignKeyConstraint(['deleted_by'], ['users.id'], name=op.f('users_deleted_by_fkey')),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('users_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey'))
    )
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_index(op.f('ix_users_updated_by'), 'users', ['updated_by'], unique=False)
    op.create_index(op.f('ix_users_is_active'), 'users', ['is_active'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_deleted_by'), 'users', ['deleted_by'], unique=False)
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_users_created_by'), 'users', ['created_by'], unique=False)
    op.create_index(op.f('idx_user_search_vector'), 'users', ['search_vector'], unique=False, postgresql_using='gin')
    op.create_index(op.f('idx_user_active_superuser'), 'users', ['is_active', 'is_superuser'], unique=False)
    # ### end Alembic commands ### 