[project]
name = "resource-wise-backend"
description = "FastAPI backend for Resource Wise"
authors = [
    { name = "Jatin Gandhi" }
]
version = "0.1.0"
requires-python = "==3.13.*"

dependencies = [
    # Core FastAPI
    "fastapi>=0.115.12",
    "uvicorn>=0.34.3",
    # Database & ORM
    "sqlalchemy>=2.0.25",
    "asyncpg>=0.29.0",
    "alembic>=1.13.1",
    "psycopg2-binary>=2.9.9", # Required for Alembic migrations
    # Vector Database (for AI embeddings)
    "pgvector>=0.3.6",
    # AI & Embeddings
    "openai>=1.52.0",
    # =============================================================================
    # LANGCHAIN ECOSYSTEM - Latest Stable Versions (December 2024)
    # =============================================================================
    "langchain>=0.3.25",
    "langchain-core>=0.3.27",
    "langchain-openai>=0.2.10",
    "langchain-community>=0.3.25",
    "langgraph>=0.4.8",  # Latest stable for agent orchestration
    "langsmith>=0.2.5",  # Latest for observability and tracing
    
    # Additional Multi-Agent Dependencies  
    "rapidfuzz>=3.10.1",        # For fuzzy entity matching
    "python-constraint>=1.4.0", # For allocation optimization
    "redis>=5.2.1",             # For agent state caching
    "tiktoken>=0.8.0",          # For token counting and optimization
    # HTTP Client (for OpenAI API calls)
    "httpx>=0.27.0",
    # Configuration & Environment
    "python-dotenv>=1.0.0",
    "pydantic-settings>=2.6.1",
    # Logging
    "structlog>=24.4.0",
    "greenlet>=3.2.3",
]

[tool.ruff]
line-length = 100
target-version = "py313"
exclude = [
    ".venv",
    "venv", 
    "__pycache__",
    "alembic/versions/*",
    "alembic/versions/**/*.py",
    "app/ai/prompts/*",
    "app/ai/prompts/**/*.py",
    "scripts/*",
    "scripts/**/*.py",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # Pyflakes
    "I",  # isort (import sorting)
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["B008", "B904"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[dependency-groups]
dev = [
    "ruff>=0.11.13",
    # Testing Framework
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
]

[tool.ruff.lint.isort]
force-wrap-aliases = true
combine-as-imports = true
